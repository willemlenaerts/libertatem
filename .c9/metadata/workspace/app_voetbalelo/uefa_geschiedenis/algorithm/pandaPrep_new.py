{"filter":false,"title":"pandaPrep_new.py","tooltip":"/app_voetbalelo/uefa_geschiedenis/algorithm/pandaPrep_new.py","undoManager":{"mark":16,"position":16,"stack":[[{"start":{"row":0,"column":0},"end":{"row":278,"column":114},"action":"insert","lines":["import pickle","import json","import pandas as pd","import numpy as np","import datetime","import time","","# Import data (don't use database for now)","panda = pickle.load(open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/games-1955-2015.p\",\"rb\"))","# team_results: aantal kampioenschappen","team_results = pickle.load(open(\"app_voetbalelo/uefa_geschiedenis/algorithm/data/team_results.p\",\"rb\"))","# panda[\"DATE_INDEX\"] = 1000000*list(range(len(panda)))","","# All teams that played in dataset:","teams = list(panda[\"HomeTeam\"].unique())","teams.sort()","","colors = dict()","for team in teams:","    colors[team] = \"rgba(0,0,0,1)\"","json.dump(colors,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/colors.json\",\"w\"))","","# Check if all in team_results","for team in teams:","    if team not in team_results.keys():","        team_results[team] = []","        ","# All dates (as unix)","dates = [int(i) for i in list(panda.index.astype(np.int64) // 10 ** 6)]","# [str(i) for i in list(panda.index.astype(np.int64) // 10 ** 9)]","","# Seasons","seasons = sorted(list(panda[\"S\"].unique()))","years = list(range(int(seasons[0].split(\"-\")[0]),int(seasons[-1].split(\"-\")[0])+1))","seasons = []","for year in years:","    seasons.append(str(year) + \"-\" + str(year+1)[-2:])","","# ELO value for every team on every date (dict with keys teams and values elo","data = dict()","max_elo = dict()","min_elo = dict()","","# For every season, define date_index","start_index = 0","interval_mem = 0","date_index = dict()","dates_index = list()","last_season = seasons[0]","for season in seasons:","    if season != seasons[0]:","        year_interval = int(season[:4]) - int(last_season[:4])","    else:","        year_interval = 1","        ","    start = time.time()","    dummy = []","    for team in teams:","        dummy.append(len(panda[(panda.S == season) & ((panda.HomeTeam == team) | (panda.AwayTeam == team))]))","    max_speeldagen = max(dummy) + 1 # increment before new season (null value between seasons)","    if max_speeldagen == 1:","        max_speeldagen = 30 + 1","    ","    # Date_index","    date_index[season] = [interval_mem + 1000000*30*(year_interval-1)+1000000*int(i) for i in list(range(start_index,start_index+max_speeldagen))]","    interval_mem += 1000000*30*(year_interval-1)","    start_index += max_speeldagen","    ","    last_season = season","    stop = time.time()","    print(\"Season: \" + season + \" || Time: \" + str(int(stop-start)) + \" || Interval: \" + str(year_interval) + \" year\")","    # First search max_speeldagen","    ","    ","","    dates_index += date_index[season]","","date_index_reversed = dict()","for season in seasons:","    for i in range(len(date_index[season])):","        date_index_reversed[date_index[season][i]] = season","","# Get games_table","game_table = []","for i in range(len(panda)):","    game_table.append({\"datum\":dates[i],","                        \"type\":panda.TYPE[i],","                        \"wedstrijd\":panda.HomeTeam[i] + \" - \" + panda.AwayTeam[i],","                        \"score\":panda.FTHG[i] + \" - \" + panda.FTAG[i]})","","team_table = []","for counter,team in enumerate(teams):","    start = time.time()","    max_elo[team] = []","    min_elo[team] = []","    data[team] = dict()","    ","    wedstrijden_totaal_string = len(pd.concat([panda[(panda.HomeTeam == team)],panda[(panda.AwayTeam == team)]]))","    winst_string = len(pd.concat([panda[(panda.HomeTeam == team) & (panda.FTHG.astype(float) > panda.FTAG.astype(float))],panda[(panda.AwayTeam == team) & (panda.FTAG.astype(float) > panda.FTHG.astype(float))]]))","    gelijk_string = len(pd.concat([panda[(panda.HomeTeam == team) & (panda.FTHG.astype(float) == panda.FTAG.astype(float))],panda[(panda.AwayTeam == team) & (panda.FTAG.astype(float) == panda.FTHG.astype(float))]]))","    verlies_string = len(pd.concat([panda[(panda.HomeTeam == team) & (panda.FTHG.astype(float) < panda.FTAG.astype(float))],panda[(panda.AwayTeam == team) & (panda.FTAG.astype(float) < panda.FTHG.astype(float))]]))","    ","    # for i in range(len(panda[panda.HomeTeam == team])):","    #     wedstrijden_totaal_string += 1","    #     if int(panda[panda.HomeTeam == team].FTHG[i]) > int(panda[panda.HomeTeam == team].FTAG[i]):","    #         winst_string += 1","    #     elif int(panda[panda.HomeTeam == team].FTHG[i]) == int(panda[panda.HomeTeam == team].FTAG[i]):","    #         gelijk_string += 1","    #     else:    ","    #         verlies_string += 1","    ","    # for i in range(len(panda[panda.AwayTeam == team])):","    #     wedstrijden_totaal_string += 1","    #     if int(panda[panda.AwayTeam == team].FTHG[i]) > int(panda[panda.AwayTeam == team].FTAG[i]):","    #         verlies_string += 1","    #     elif int(panda[panda.AwayTeam == team].FTHG[i]) == int(panda[panda.AwayTeam == team].FTAG[i]):","    #         gelijk_string += 1","    #     else:    ","    #         winst_string += 1            ","","    doelpuntensaldo = sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == team)][\"FTHG\"],panda[(panda.AwayTeam == team)][\"FTAG\"]])]) - sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == team)][\"FTAG\"],panda[(panda.AwayTeam == team)][\"FTHG\"]])])","    doelpuntensaldo_perwedstrijd = round(doelpuntensaldo/wedstrijden_totaal_string,2)","    team_table.append({ \"team\":team,","                        \"gemelo\": str(int(sum(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]]))/len(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))),","                        \"maxelo\": str(int(max(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))),","                        \"minelo\": str(int(min(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))),","                        \"kamp\": str(len(team_results[team])),","                        \"seizoenen\": len(list(set(pd.concat([panda[(panda.HomeTeam == team)],panda[(panda.AwayTeam == team)]]).S))),","                        \"wedstrijden\":str(wedstrijden_totaal_string),","                        \"wedstrijdenwinst\": str(winst_string),","                        \"wedstrijdengelijk\":str(gelijk_string),","                        \"wedstrijdenverlies\":str(verlies_string),","                        \"goalsvoor\": sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == team)][\"FTHG\"],panda[(panda.AwayTeam == team)][\"FTAG\"]])]) ,","                        \"goalstegen\": sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == team)][\"FTAG\"],panda[(panda.AwayTeam == team)][\"FTHG\"]])]),","                        \"winperc\": str(round(100*(winst_string/wedstrijden_totaal_string),1)),","                        \"doelpuntensaldo\": doelpuntensaldo_perwedstrijd                   ","                        })","    data[team][\"kampioenschappen\"] = len(team_results[team])","    data[team][\"gemiddelde elo\"] = int(sum(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]]))/len(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))","    data[team][\"hoogste elo\"] = int(max(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))","    data[team][\"laagste elo\"] = int(min(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))","    ","    for season in seasons:","        data[team][season] = list()","        dataframe_elo = pd.concat([panda[(panda.HomeTeam == team) & (panda.S == season)][\"HomeElo\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"AwayElo\"]]).sort_index()","        # dataframe_date_index = pd.concat([panda[(panda.HomeTeam == team) & (panda.S == season)][\"DATE_INDEX\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"DATE_INDEX\"]]).sort_index()","        dataframe_wedstrijd = pd.concat([team + \" - \" + panda[(panda.HomeTeam == team) & (panda.S == season)][\"AwayTeam\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"HomeTeam\"] + \" - \" + team ]).sort_index()","        dataframe_3 = pd.concat([panda[(panda.HomeTeam == team) & (panda.S == season)][\"FTHG\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"FTHG\"]]).sort_index()","        dataframe_4 = pd.concat([panda[(panda.HomeTeam == team) & (panda.S == season)][\"FTAG\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"FTAG\"]]).sort_index()","        dataframe_type = pd.concat([panda[(panda.HomeTeam == team) & (panda.S == season)][\"TYPE\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"TYPE\"]]).sort_index()","","        # [0]: Datum index (niet echte datum maar plotdatum)","        data[team][season].append(date_index[season])","        # data[team][season].append(date_index[season][:len(dataframe_elo)])","        ","        # [1]: ELO na wedstrijd","        dataframe_elo_list = [int(i) for i in list(dataframe_elo)]","        data[team][season].append([])","        for i in range(len(date_index[season])):","            try:","                data[team][season][-1].append(dataframe_elo_list[i])","            except:","                data[team][season][-1].append(None)","        # data[team][season].append([int(i) for i in list(dataframe_elo)])","        ","        # Get maximum elo","        # Remove None's","        ","        try:","            max_elo[team].append(max(list(filter(None,data[team][season][-1]))))","        except:","            # Dit seizoen speelde ploeg niet","            max_elo[team].append(0)","","        # Get minimum elo","        try:","            min_elo[team].append(min(list(filter(None,data[team][season][-1]))))","        except:","            # Dit seizoen speelde ploeg niet","            min_elo[team].append(0)","            ","        # [2]: Wedstrijd in string (HomeTeam - AwayTeam)","        dataframe_wedstrijd_list = list(dataframe_wedstrijd)","        data[team][season].append([])","        for i in range(len(date_index[season])):","            try:","                data[team][season][-1].append(dataframe_wedstrijd_list[i])","            except:","                data[team][season][-1].append(None)","        # data[team][season].append(list(dataframe_wedstrijd))","        ","        # [3]: Score (Home Goals - Away Goals)","        data[team][season].append([])","        for i in range(len(date_index[season])):","            try:","                data[team][season][-1].append(dataframe_3[i] + \" - \" + dataframe_4[i])","            except:","                data[team][season][-1].append(None)","        ","        ","        # data[team][season].append([])","        # for i in range(len(dataframe_3)):","        #     data[team][season][-1].append(dataframe_3[i] + \" - \" + dataframe_4[i])","        ","        # [4]: Datum wedstrijd","        dataframe_elo_index_list = [int(i) for i in list(dataframe_elo.index.astype(np.int64) // 10 ** 6)]","        data[team][season].append([])","        for i in range(len(date_index[season])):","            try:","                data[team][season][-1].append(dataframe_elo_index_list[i])","            except:","                data[team][season][-1].append(None)","        ","        # data[team][season].append([int(i) for i in list(dataframe_elo.index.astype(np.int64) // 10 ** 6)])","        ","        # [5]: Type of game","        dataframe_type_list = list(dataframe_type)","        data[team][season].append([])","        for i in range(len(date_index[season])):","            try:","                data[team][season][-1].append(dataframe_type_list[i])","            except:","                data[team][season][-1].append(None)        ","","        # data[team][season].append(list(dataframe_type))","        ","        # [6]: Kampioen (1: ja, 0: nee)","        data[team][season].append(0)   ","        if len(team_results[team]) > 0:","            for kampioenschap_seizoen in team_results[team]:","                if kampioenschap_seizoen == season:","                    data[team][season][-1] = 1","                    break","        ","    max_elo[team] = max(max_elo[team])","    min_elo[team] = min(list(filter((0).__ne__, min_elo[team])))","    ","    stop = time.time()","    print(\"Team: \" + team + \" || Time: \" + str(int(stop-start)) + \" s\")","    ","max_elo_data = dict()","for team in teams:","    max_elo_data[team] = list()","    for s in range(len(seasons)):","        for i in range(len(data[team][seasons[s]][1])):","            if data[team][seasons[s]][1][i] == max_elo[team]:","                max_elo_data[team].append([s,i])","","min_elo_data = dict()","for team in teams:","    min_elo_data[team] = list()","    for s in range(len(seasons)):","        for i in range(len(data[team][seasons[s]][1])):","            if data[team][seasons[s]][1][i] == min_elo[team]:","                min_elo_data[team].append([s,i])","","# pickle.dump(data,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/elo-evolution.p\",\"wb\"))","# pickle.dump(teams,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/teams.p\",\"wb\"))","# pickle.dump(dates,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/dates.p\",\"wb\"))","# pickle.dump(seasons,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/seasons.p\",\"wb\"))","# pickle.dump(max_elo_data,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/max_elo_data.p\",\"wb\"))","","# Per team","for team in teams:","    data_team = dict()","    data_team[team] = data[team]","    if team == \"EB/Streymur\":","        team = \"EB Streymur\"","    json.dump(data_team,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/team/\" + team + \".json\",\"w\"))","","json.dump(data,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/elo-evolution.json\",\"w\"))","json.dump(team_table,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/team_table.json\",\"w\"))","json.dump(game_table,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/game_table.json\",\"w\"))","json.dump(teams,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/teams.json\",\"w\"))","json.dump(date_index,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/date_index.json\",\"w\"))","json.dump(date_index_reversed,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/date_index_reversed.json\",\"w\"))","json.dump(seasons,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/seasons.json\",\"w\"))","json.dump(max_elo_data,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/max_elo_data.json\",\"w\"))","json.dump(min_elo_data,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/min_elo_data.json\",\"w\"))"],"id":1}],[{"start":{"row":153,"column":8},"end":{"row":153,"column":10},"action":"remove","lines":["# "],"id":2}],[{"start":{"row":152,"column":8},"end":{"row":152,"column":10},"action":"insert","lines":["# "],"id":3}],[{"start":{"row":153,"column":8},"end":{"row":153,"column":10},"action":"insert","lines":["# "],"id":4}],[{"start":{"row":0,"column":0},"end":{"row":278,"column":114},"action":"remove","lines":["import pickle","import json","import pandas as pd","import numpy as np","import datetime","import time","","# Import data (don't use database for now)","panda = pickle.load(open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/games-1955-2015.p\",\"rb\"))","# team_results: aantal kampioenschappen","team_results = pickle.load(open(\"app_voetbalelo/uefa_geschiedenis/algorithm/data/team_results.p\",\"rb\"))","# panda[\"DATE_INDEX\"] = 1000000*list(range(len(panda)))","","# All teams that played in dataset:","teams = list(panda[\"HomeTeam\"].unique())","teams.sort()","","colors = dict()","for team in teams:","    colors[team] = \"rgba(0,0,0,1)\"","json.dump(colors,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/colors.json\",\"w\"))","","# Check if all in team_results","for team in teams:","    if team not in team_results.keys():","        team_results[team] = []","        ","# All dates (as unix)","dates = [int(i) for i in list(panda.index.astype(np.int64) // 10 ** 6)]","# [str(i) for i in list(panda.index.astype(np.int64) // 10 ** 9)]","","# Seasons","seasons = sorted(list(panda[\"S\"].unique()))","years = list(range(int(seasons[0].split(\"-\")[0]),int(seasons[-1].split(\"-\")[0])+1))","seasons = []","for year in years:","    seasons.append(str(year) + \"-\" + str(year+1)[-2:])","","# ELO value for every team on every date (dict with keys teams and values elo","data = dict()","max_elo = dict()","min_elo = dict()","","# For every season, define date_index","start_index = 0","interval_mem = 0","date_index = dict()","dates_index = list()","last_season = seasons[0]","for season in seasons:","    if season != seasons[0]:","        year_interval = int(season[:4]) - int(last_season[:4])","    else:","        year_interval = 1","        ","    start = time.time()","    dummy = []","    for team in teams:","        dummy.append(len(panda[(panda.S == season) & ((panda.HomeTeam == team) | (panda.AwayTeam == team))]))","    max_speeldagen = max(dummy) + 1 # increment before new season (null value between seasons)","    if max_speeldagen == 1:","        max_speeldagen = 30 + 1","    ","    # Date_index","    date_index[season] = [interval_mem + 1000000*30*(year_interval-1)+1000000*int(i) for i in list(range(start_index,start_index+max_speeldagen))]","    interval_mem += 1000000*30*(year_interval-1)","    start_index += max_speeldagen","    ","    last_season = season","    stop = time.time()","    print(\"Season: \" + season + \" || Time: \" + str(int(stop-start)) + \" || Interval: \" + str(year_interval) + \" year\")","    # First search max_speeldagen","    ","    ","","    dates_index += date_index[season]","","date_index_reversed = dict()","for season in seasons:","    for i in range(len(date_index[season])):","        date_index_reversed[date_index[season][i]] = season","","# Get games_table","game_table = []","for i in range(len(panda)):","    game_table.append({\"datum\":dates[i],","                        \"type\":panda.TYPE[i],","                        \"wedstrijd\":panda.HomeTeam[i] + \" - \" + panda.AwayTeam[i],","                        \"score\":panda.FTHG[i] + \" - \" + panda.FTAG[i]})","","team_table = []","for counter,team in enumerate(teams):","    start = time.time()","    max_elo[team] = []","    min_elo[team] = []","    data[team] = dict()","    ","    wedstrijden_totaal_string = len(pd.concat([panda[(panda.HomeTeam == team)],panda[(panda.AwayTeam == team)]]))","    winst_string = len(pd.concat([panda[(panda.HomeTeam == team) & (panda.FTHG.astype(float) > panda.FTAG.astype(float))],panda[(panda.AwayTeam == team) & (panda.FTAG.astype(float) > panda.FTHG.astype(float))]]))","    gelijk_string = len(pd.concat([panda[(panda.HomeTeam == team) & (panda.FTHG.astype(float) == panda.FTAG.astype(float))],panda[(panda.AwayTeam == team) & (panda.FTAG.astype(float) == panda.FTHG.astype(float))]]))","    verlies_string = len(pd.concat([panda[(panda.HomeTeam == team) & (panda.FTHG.astype(float) < panda.FTAG.astype(float))],panda[(panda.AwayTeam == team) & (panda.FTAG.astype(float) < panda.FTHG.astype(float))]]))","    ","    # for i in range(len(panda[panda.HomeTeam == team])):","    #     wedstrijden_totaal_string += 1","    #     if int(panda[panda.HomeTeam == team].FTHG[i]) > int(panda[panda.HomeTeam == team].FTAG[i]):","    #         winst_string += 1","    #     elif int(panda[panda.HomeTeam == team].FTHG[i]) == int(panda[panda.HomeTeam == team].FTAG[i]):","    #         gelijk_string += 1","    #     else:    ","    #         verlies_string += 1","    ","    # for i in range(len(panda[panda.AwayTeam == team])):","    #     wedstrijden_totaal_string += 1","    #     if int(panda[panda.AwayTeam == team].FTHG[i]) > int(panda[panda.AwayTeam == team].FTAG[i]):","    #         verlies_string += 1","    #     elif int(panda[panda.AwayTeam == team].FTHG[i]) == int(panda[panda.AwayTeam == team].FTAG[i]):","    #         gelijk_string += 1","    #     else:    ","    #         winst_string += 1            ","","    doelpuntensaldo = sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == team)][\"FTHG\"],panda[(panda.AwayTeam == team)][\"FTAG\"]])]) - sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == team)][\"FTAG\"],panda[(panda.AwayTeam == team)][\"FTHG\"]])])","    doelpuntensaldo_perwedstrijd = round(doelpuntensaldo/wedstrijden_totaal_string,2)","    team_table.append({ \"team\":team,","                        \"gemelo\": str(int(sum(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]]))/len(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))),","                        \"maxelo\": str(int(max(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))),","                        \"minelo\": str(int(min(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))),","                        \"kamp\": str(len(team_results[team])),","                        \"seizoenen\": len(list(set(pd.concat([panda[(panda.HomeTeam == team)],panda[(panda.AwayTeam == team)]]).S))),","                        \"wedstrijden\":str(wedstrijden_totaal_string),","                        \"wedstrijdenwinst\": str(winst_string),","                        \"wedstrijdengelijk\":str(gelijk_string),","                        \"wedstrijdenverlies\":str(verlies_string),","                        \"goalsvoor\": sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == team)][\"FTHG\"],panda[(panda.AwayTeam == team)][\"FTAG\"]])]) ,","                        \"goalstegen\": sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == team)][\"FTAG\"],panda[(panda.AwayTeam == team)][\"FTHG\"]])]),","                        \"winperc\": str(round(100*(winst_string/wedstrijden_totaal_string),1)),","                        \"doelpuntensaldo\": doelpuntensaldo_perwedstrijd                   ","                        })","    data[team][\"kampioenschappen\"] = len(team_results[team])","    data[team][\"gemiddelde elo\"] = int(sum(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]]))/len(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))","    data[team][\"hoogste elo\"] = int(max(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))","    data[team][\"laagste elo\"] = int(min(pd.concat([panda[(panda.HomeTeam == team)][\"HomeElo\"],panda[(panda.AwayTeam == team)][\"AwayElo\"]])))","    ","    for season in seasons:","        data[team][season] = list()","        dataframe_elo = pd.concat([panda[(panda.HomeTeam == team) & (panda.S == season)][\"HomeElo\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"AwayElo\"]]).sort_index()","        # dataframe_date_index = pd.concat([panda[(panda.HomeTeam == team) & (panda.S == season)][\"DATE_INDEX\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"DATE_INDEX\"]]).sort_index()","        dataframe_wedstrijd = pd.concat([team + \" - \" + panda[(panda.HomeTeam == team) & (panda.S == season)][\"AwayTeam\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"HomeTeam\"] + \" - \" + team ]).sort_index()","        dataframe_3 = pd.concat([panda[(panda.HomeTeam == team) & (panda.S == season)][\"FTHG\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"FTHG\"]]).sort_index()","        dataframe_4 = pd.concat([panda[(panda.HomeTeam == team) & (panda.S == season)][\"FTAG\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"FTAG\"]]).sort_index()","        dataframe_type = pd.concat([panda[(panda.HomeTeam == team) & (panda.S == season)][\"TYPE\"],panda[(panda.AwayTeam == team) & (panda.S == season)][\"TYPE\"]]).sort_index()","","        # [0]: Datum index (niet echte datum maar plotdatum)","        # data[team][season].append(date_index[season])","        # data[team][season].append(date_index[season][:len(dataframe_elo)])","        ","        # [1]: ELO na wedstrijd","        dataframe_elo_list = [int(i) for i in list(dataframe_elo)]","        data[team][season].append([])","        for i in range(len(date_index[season])):","            try:","                data[team][season][-1].append(dataframe_elo_list[i])","            except:","                data[team][season][-1].append(None)","        # data[team][season].append([int(i) for i in list(dataframe_elo)])","        ","        # Get maximum elo","        # Remove None's","        ","        try:","            max_elo[team].append(max(list(filter(None,data[team][season][-1]))))","        except:","            # Dit seizoen speelde ploeg niet","            max_elo[team].append(0)","","        # Get minimum elo","        try:","            min_elo[team].append(min(list(filter(None,data[team][season][-1]))))","        except:","            # Dit seizoen speelde ploeg niet","            min_elo[team].append(0)","            ","        # [2]: Wedstrijd in string (HomeTeam - AwayTeam)","        dataframe_wedstrijd_list = list(dataframe_wedstrijd)","        data[team][season].append([])","        for i in range(len(date_index[season])):","            try:","                data[team][season][-1].append(dataframe_wedstrijd_list[i])","            except:","                data[team][season][-1].append(None)","        # data[team][season].append(list(dataframe_wedstrijd))","        ","        # [3]: Score (Home Goals - Away Goals)","        data[team][season].append([])","        for i in range(len(date_index[season])):","            try:","                data[team][season][-1].append(dataframe_3[i] + \" - \" + dataframe_4[i])","            except:","                data[team][season][-1].append(None)","        ","        ","        # data[team][season].append([])","        # for i in range(len(dataframe_3)):","        #     data[team][season][-1].append(dataframe_3[i] + \" - \" + dataframe_4[i])","        ","        # [4]: Datum wedstrijd","        dataframe_elo_index_list = [int(i) for i in list(dataframe_elo.index.astype(np.int64) // 10 ** 6)]","        data[team][season].append([])","        for i in range(len(date_index[season])):","            try:","                data[team][season][-1].append(dataframe_elo_index_list[i])","            except:","                data[team][season][-1].append(None)","        ","        # data[team][season].append([int(i) for i in list(dataframe_elo.index.astype(np.int64) // 10 ** 6)])","        ","        # [5]: Type of game","        dataframe_type_list = list(dataframe_type)","        data[team][season].append([])","        for i in range(len(date_index[season])):","            try:","                data[team][season][-1].append(dataframe_type_list[i])","            except:","                data[team][season][-1].append(None)        ","","        # data[team][season].append(list(dataframe_type))","        ","        # [6]: Kampioen (1: ja, 0: nee)","        data[team][season].append(0)   ","        if len(team_results[team]) > 0:","            for kampioenschap_seizoen in team_results[team]:","                if kampioenschap_seizoen == season:","                    data[team][season][-1] = 1","                    break","        ","    max_elo[team] = max(max_elo[team])","    min_elo[team] = min(list(filter((0).__ne__, min_elo[team])))","    ","    stop = time.time()","    print(\"Team: \" + team + \" || Time: \" + str(int(stop-start)) + \" s\")","    ","max_elo_data = dict()","for team in teams:","    max_elo_data[team] = list()","    for s in range(len(seasons)):","        for i in range(len(data[team][seasons[s]][1])):","            if data[team][seasons[s]][1][i] == max_elo[team]:","                max_elo_data[team].append([s,i])","","min_elo_data = dict()","for team in teams:","    min_elo_data[team] = list()","    for s in range(len(seasons)):","        for i in range(len(data[team][seasons[s]][1])):","            if data[team][seasons[s]][1][i] == min_elo[team]:","                min_elo_data[team].append([s,i])","","# pickle.dump(data,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/elo-evolution.p\",\"wb\"))","# pickle.dump(teams,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/teams.p\",\"wb\"))","# pickle.dump(dates,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/dates.p\",\"wb\"))","# pickle.dump(seasons,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/seasons.p\",\"wb\"))","# pickle.dump(max_elo_data,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/max_elo_data.p\",\"wb\"))","","# Per team","for team in teams:","    data_team = dict()","    data_team[team] = data[team]","    if team == \"EB/Streymur\":","        team = \"EB Streymur\"","    json.dump(data_team,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/team/\" + team + \".json\",\"w\"))","","json.dump(data,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/elo-evolution.json\",\"w\"))","json.dump(team_table,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/team_table.json\",\"w\"))","json.dump(game_table,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/game_table.json\",\"w\"))","json.dump(teams,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/teams.json\",\"w\"))","json.dump(date_index,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/date_index.json\",\"w\"))","json.dump(date_index_reversed,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/date_index_reversed.json\",\"w\"))","json.dump(seasons,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/seasons.json\",\"w\"))","json.dump(max_elo_data,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/max_elo_data.json\",\"w\"))","json.dump(min_elo_data,open(\"app_voetbalelo/uefa_geschiedenis/algorithm/results/json.dump/min_elo_data.json\",\"w\"))"],"id":5}],[{"start":{"row":0,"column":0},"end":{"row":230,"column":116},"action":"insert","lines":["import pickle","import json","import pandas as pd","import numpy as np","import datetime","import time","","# Import data (don't use database for now)","panda = pickle.load(open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/games-1872-2015.p\",\"rb\"))","","# All countries that played in dataset:","countries = list(panda[\"HomeTeam\"].unique())","countries.sort()","","# All dates (as unix)","dates = [int(i) for i in list(panda.index.astype(np.int64) // 10 ** 6)]","","# Seasons","years = sorted(list(panda[\"Y\"].unique()))","","# ELO value for every country on every date (dict with keys countries and values elo","data = dict()","max_elo = dict()","min_elo = dict()","","# # For every year, define date_index","# start_index = 0","# interval_mem = 0","# date_index = dict()","# dates_index = list()","# last_year = years[0]","# for year in years:","#     if year != years[0]:","#         year_interval = int(year) - int(last_year)","#     else:","#         year_interval = 1","        ","#     start = time.time()","#     dummy = []","#     for country in countries:","#         dummy.append(len(panda[(panda.Y == year) & ((panda.HomeTeam == country) | (panda.AwayTeam == country))]))","#     max_speeldagen = max(dummy) + 1 # increment before new year (null value between years)","#     if max_speeldagen == 1:","#         max_speeldagen = 10 + 1","    ","#     # Date_index","#     date_index[year] = [interval_mem + 1000000*10*(year_interval-1)+1000000*int(i) for i in list(range(start_index,start_index+max_speeldagen))]","#     interval_mem += 1000000*10*(year_interval-1)","#     start_index += max_speeldagen","    ","#     last_year = year","#     stop = time.time()","#     print(\"Year: \" + year + \" || Time: \" + str(int(stop-start)) + \" || Interval: \" + str(year_interval) + \" year\")","#     # First search max_speeldagen","    ","#     dates_index += date_index[year]","","# date_index_reversed = dict()","# for year in years:","#     for i in range(len(date_index[year])):","#         date_index_reversed[date_index[year][i]] = year","","# Get games_table","game_table = []","for i in range(len(panda)):","    game_table.append({\"datum\":dates[i],","                        \"type\":panda.TYPE[i],","                        \"wedstrijd\":panda.HomeTeam[i] + \" - \" + panda.AwayTeam[i],","                        \"score\":panda.FTHG[i] + \" - \" + panda.FTAG[i]})","","country_table = []","for counter,country in enumerate(countries):","    start = time.time()","    max_elo[country] = []","    min_elo[country] = []","    data[country] = dict()","    ","    wedstrijden_totaal_string = len(pd.concat([panda[(panda.HomeTeam == country)],panda[(panda.AwayTeam == country)]]))","    winst_string = len(pd.concat([panda[(panda.HomeTeam == country) & (panda.FTHG.astype(float) > panda.FTAG.astype(float))],panda[(panda.AwayTeam == country) & (panda.FTAG.astype(float) > panda.FTHG.astype(float))]]))","    gelijk_string = len(pd.concat([panda[(panda.HomeTeam == country) & (panda.FTHG.astype(float) == panda.FTAG.astype(float))],panda[(panda.AwayTeam == country) & (panda.FTAG.astype(float) == panda.FTHG.astype(float))]]))","    verlies_string = len(pd.concat([panda[(panda.HomeTeam == country) & (panda.FTHG.astype(float) < panda.FTAG.astype(float))],panda[(panda.AwayTeam == country) & (panda.FTAG.astype(float) < panda.FTHG.astype(float))]]))","    ","    # for i in range(len(panda[panda.HomeTeam == country])):","    #     wedstrijden_totaal_string += 1","    #     if int(panda[panda.HomeTeam == country].FTHG[i]) > int(panda[panda.HomeTeam == country].FTAG[i]):","    #         winst_string += 1","    #     elif int(panda[panda.HomeTeam == country].FTHG[i]) == int(panda[panda.HomeTeam == country].FTAG[i]):","    #         gelijk_string += 1","    #     else:    ","    #         verlies_string += 1","    ","    # for i in range(len(panda[panda.AwayTeam == country])):","    #     wedstrijden_totaal_string += 1","    #     if int(panda[panda.AwayTeam == country].FTHG[i]) > int(panda[panda.AwayTeam == country].FTAG[i]):","    #         verlies_string += 1","    #     elif int(panda[panda.AwayTeam == country].FTHG[i]) == int(panda[panda.AwayTeam == country].FTAG[i]):","    #         gelijk_string += 1","    #     else:    ","    #         winst_string += 1            ","    try: ","        nuelo = str(int(pd.concat([panda[(panda.HomeTeam == country) & (panda.index.astype(datetime.datetime) > datetime.datetime(2015, 1, 1,0,0))][\"HomeElo\"],panda[(panda.AwayTeam == country) & (panda.index.astype(datetime.datetime) > datetime.datetime(2015, 1, 1,0,0))][\"AwayElo\"]]).sort_index()[-1]))","    except:","        nuelo = \"\"","    doelpuntensaldo = sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == country)][\"FTHG\"],panda[(panda.AwayTeam == country)][\"FTAG\"]])]) - sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == country)][\"FTAG\"],panda[(panda.AwayTeam == country)][\"FTHG\"]])])","    doelpuntensaldo_perwedstrijd = round(doelpuntensaldo/wedstrijden_totaal_string,2)","    country_table.append({ \"country\":country,","                        \"nuelo\": nuelo,","                        \"gemelo\": str(int(sum(pd.concat([panda[(panda.HomeTeam == country)][\"HomeElo\"],panda[(panda.AwayTeam == country)][\"AwayElo\"]]))/len(pd.concat([panda[(panda.HomeTeam == country)][\"HomeElo\"],panda[(panda.AwayTeam == country)][\"AwayElo\"]])))),","                        \"maxelo\": str(int(max(pd.concat([panda[(panda.HomeTeam == country)][\"HomeElo\"],panda[(panda.AwayTeam == country)][\"AwayElo\"]])))),","                        \"minelo\": str(int(min(pd.concat([panda[(panda.HomeTeam == country)][\"HomeElo\"],panda[(panda.AwayTeam == country)][\"AwayElo\"]])))),","                        \"jaren\": len(list(set(pd.concat([panda[(panda.HomeTeam == country)],panda[(panda.AwayTeam == country)]]).Y))),","                        \"wedstrijden\":str(wedstrijden_totaal_string),","                        \"wedstrijdenwinst\": str(winst_string),","                        \"wedstrijdengelijk\":str(gelijk_string),","                        \"wedstrijdenverlies\":str(verlies_string),","                        \"goalsvoor\": sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == country)][\"FTHG\"],panda[(panda.AwayTeam == country)][\"FTAG\"]])]) ,","                        \"goalstegen\": sum([int(i) for i in pd.concat([panda[(panda.HomeTeam == country)][\"FTAG\"],panda[(panda.AwayTeam == country)][\"FTHG\"]])]),","                        \"winperc\": str(round(100*(winst_string/wedstrijden_totaal_string),1)),","                        \"doelpuntensaldo\": doelpuntensaldo_perwedstrijd                   ","                        })","    # data[country][\"kampioenschappen\"] = len(country_results[country])","    data[country][\"gemiddelde elo\"] = int(sum(pd.concat([panda[(panda.HomeTeam == country)][\"HomeElo\"],panda[(panda.AwayTeam == country)][\"AwayElo\"]]))/len(pd.concat([panda[(panda.HomeTeam == country)][\"HomeElo\"],panda[(panda.AwayTeam == country)][\"AwayElo\"]])))","    data[country][\"hoogste elo\"] = int(max(pd.concat([panda[(panda.HomeTeam == country)][\"HomeElo\"],panda[(panda.AwayTeam == country)][\"AwayElo\"]])))","    data[country][\"laagste elo\"] = int(min(pd.concat([panda[(panda.HomeTeam == country)][\"HomeElo\"],panda[(panda.AwayTeam == country)][\"AwayElo\"]])))","    ","    for year in years:","        data[country][year] = list()","        dataframe_elo = pd.concat([panda[(panda.HomeTeam == country) & (panda.Y == year)][\"HomeElo\"],panda[(panda.AwayTeam == country) & (panda.Y == year)][\"AwayElo\"]]).sort_index()","        # dataframe_date_index = pd.concat([panda[(panda.HomeTeam == country) & (panda.Y == year)][\"DATE_INDEX\"],panda[(panda.AwayTeam == country) & (panda.Y == year)][\"DATE_INDEX\"]]).sort_index()","        dataframe_wedstrijd = pd.concat([country + \" - \" + panda[(panda.HomeTeam == country) & (panda.Y == year)][\"AwayTeam\"],panda[(panda.AwayTeam == country) & (panda.Y == year)][\"HomeTeam\"] + \" - \" + country ]).sort_index()","        dataframe_3 = pd.concat([panda[(panda.HomeTeam == country) & (panda.Y == year)][\"FTHG\"],panda[(panda.AwayTeam == country) & (panda.Y == year)][\"FTHG\"]]).sort_index()","        dataframe_4 = pd.concat([panda[(panda.HomeTeam == country) & (panda.Y == year)][\"FTAG\"],panda[(panda.AwayTeam == country) & (panda.Y == year)][\"FTAG\"]]).sort_index()","        dataframe_type = pd.concat([panda[(panda.HomeTeam == country) & (panda.Y == year)][\"TYPE\"],panda[(panda.AwayTeam == country) & (panda.Y == year)][\"TYPE\"]]).sort_index()","","        # [0]: Datum index (niet echte datum maar plotdatum)","        data[country][year].append([int(i) for i in list(dataframe_elo.index.astype(np.int64) // 10 ** 6)])","        # data[country][year].append(date_index[year][:len(dataframe_elo)])","        ","        # [1]: ELO na wedstrijd","        data[country][year].append([int(i) for i in list(dataframe_elo)])","        # data[country][year].append([int(i) for i in list(dataframe_elo)])","        ","        # Get maximum elo","        # Remove None's","        ","        try:","            max_elo[country].append(max(list(data[country][year][-1])))","        except:","            # Dit seizoen speelde ploeg niet","            max_elo[country].append(0)","","        # Get minimum elo","        try:","            min_elo[country].append(min(list(data[country][year][-1])))","        except:","            # Dit seizoen speelde ploeg niet","            min_elo[country].append(0)","            ","        # [2]: Wedstrijd in string (HomeTeam - AwayTeam)","        data[country][year].append(list(dataframe_wedstrijd))","        ","        # [3]: Score (Home Goals - Away Goals)","        data[country][year].append([])","        for i in range(len(dataframe_elo)):","            data[country][year][-1].append(dataframe_3[i] + \" - \" + dataframe_4[i])","        ","        # # [4]: Datum wedstrijd","        # dataframe_elo_index_list = [int(i) for i in list(dataframe_elo.index.astype(np.int64) // 10 ** 6)]","        # data[country][year].append([])","        # for i in range(len(date_index[year])):","        #     try:","        #         data[country][year][-1].append(dataframe_elo_index_list[i])","        #     except:","        #         data[country][year][-1].append(None)","        ","        # data[country][year].append([int(i) for i in list(dataframe_elo.index.astype(np.int64) // 10 ** 6)])","        ","        # [5]: Type of game","        data[country][year].append(list(dataframe_type))","        ","        # # [6]: Kampioen (1: ja, 0: nee)","        # data[country][year].append(0)   ","        # if len(country_results[country]) > 0:","        #     for kampioenschap_seizoen in country_results[country]:","        #         if kampioenschap_seizoen == year:","        #             data[country][year][-1] = 1","        #             break","        ","    max_elo[country] = max(max_elo[country])","    min_elo[country] = min(list(filter((0).__ne__, min_elo[country])))","    ","    stop = time.time()","    print(\"Team: \" + country + \" || Time: \" + str(int(stop-start)) + \" s\")","    ","max_elo_data = dict()","for country in countries:","    max_elo_data[country] = list()","    for s in range(len(years)):","        for i in range(len(data[country][years[s]][1])):","            if data[country][years[s]][1][i] == max_elo[country]:","                max_elo_data[country].append([s,i])","","min_elo_data = dict()","for country in countries:","    min_elo_data[country] = list()","    for s in range(len(years)):","        for i in range(len(data[country][years[s]][1])):","            if data[country][years[s]][1][i] == min_elo[country]:","                min_elo_data[country].append([s,i])","","# pickle.dump(data,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/elo-evolution.p\",\"wb\"))","# pickle.dump(countries,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/countries.p\",\"wb\"))","# pickle.dump(dates,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/dates.p\",\"wb\"))","# pickle.dump(years,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/years.p\",\"wb\"))","# pickle.dump(max_elo_data,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/max_elo_data.p\",\"wb\"))","","# Per country","","for country in countries:","    data_country = dict()","    data_country[country] = data[country]","    json.dump(data_country,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/json.dump/countries/\" + country + \".json\",\"w\"))","","json.dump(data,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/json.dump/elo-evolution.json\",\"w\"))","json.dump(dates,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/json.dump/dates.json\",\"w\"))","json.dump(country_table,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/json.dump/country_table.json\",\"w\"))","json.dump(game_table,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/json.dump/game_table.json\",\"w\"))","json.dump(countries,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/json.dump/countries.json\",\"w\"))","json.dump(years,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/json.dump/years.json\",\"w\"))","json.dump(max_elo_data,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/json.dump/max_elo_data.json\",\"w\"))","json.dump(min_elo_data,open(\"app_voetbalelo/wereld_geschiedenis/algorithm/results/json.dump/min_elo_data.json\",\"w\"))"],"id":6}],[{"start":{"row":8,"column":41},"end":{"row":8,"column":48},"action":"remove","lines":["wereld_"],"id":7},{"start":{"row":8,"column":41},"end":{"row":8,"column":46},"action":"insert","lines":["uefa_"]},{"start":{"row":210,"column":40},"end":{"row":210,"column":47},"action":"remove","lines":["wereld_"]},{"start":{"row":210,"column":40},"end":{"row":210,"column":45},"action":"insert","lines":["uefa_"]},{"start":{"row":211,"column":45},"end":{"row":211,"column":52},"action":"remove","lines":["wereld_"]},{"start":{"row":211,"column":45},"end":{"row":211,"column":50},"action":"insert","lines":["uefa_"]},{"start":{"row":212,"column":41},"end":{"row":212,"column":48},"action":"remove","lines":["wereld_"]},{"start":{"row":212,"column":41},"end":{"row":212,"column":46},"action":"insert","lines":["uefa_"]},{"start":{"row":213,"column":41},"end":{"row":213,"column":48},"action":"remove","lines":["wereld_"]},{"start":{"row":213,"column":41},"end":{"row":213,"column":46},"action":"insert","lines":["uefa_"]},{"start":{"row":214,"column":48},"end":{"row":214,"column":55},"action":"remove","lines":["wereld_"]},{"start":{"row":214,"column":48},"end":{"row":214,"column":53},"action":"insert","lines":["uefa_"]},{"start":{"row":221,"column":48},"end":{"row":221,"column":55},"action":"remove","lines":["wereld_"]},{"start":{"row":221,"column":48},"end":{"row":221,"column":53},"action":"insert","lines":["uefa_"]},{"start":{"row":223,"column":36},"end":{"row":223,"column":43},"action":"remove","lines":["wereld_"]},{"start":{"row":223,"column":36},"end":{"row":223,"column":41},"action":"insert","lines":["uefa_"]},{"start":{"row":224,"column":37},"end":{"row":224,"column":44},"action":"remove","lines":["wereld_"]},{"start":{"row":224,"column":37},"end":{"row":224,"column":42},"action":"insert","lines":["uefa_"]},{"start":{"row":225,"column":45},"end":{"row":225,"column":52},"action":"remove","lines":["wereld_"]},{"start":{"row":225,"column":45},"end":{"row":225,"column":50},"action":"insert","lines":["uefa_"]},{"start":{"row":226,"column":42},"end":{"row":226,"column":49},"action":"remove","lines":["wereld_"]},{"start":{"row":226,"column":42},"end":{"row":226,"column":47},"action":"insert","lines":["uefa_"]},{"start":{"row":227,"column":41},"end":{"row":227,"column":48},"action":"remove","lines":["wereld_"]},{"start":{"row":227,"column":41},"end":{"row":227,"column":46},"action":"insert","lines":["uefa_"]},{"start":{"row":228,"column":37},"end":{"row":228,"column":44},"action":"remove","lines":["wereld_"]},{"start":{"row":228,"column":37},"end":{"row":228,"column":42},"action":"insert","lines":["uefa_"]},{"start":{"row":229,"column":44},"end":{"row":229,"column":51},"action":"remove","lines":["wereld_"]},{"start":{"row":229,"column":44},"end":{"row":229,"column":49},"action":"insert","lines":["uefa_"]},{"start":{"row":230,"column":44},"end":{"row":230,"column":51},"action":"remove","lines":["wereld_"]},{"start":{"row":230,"column":44},"end":{"row":230,"column":49},"action":"insert","lines":["uefa_"]}],[{"start":{"row":8,"column":86},"end":{"row":8,"column":87},"action":"remove","lines":["2"],"id":8}],[{"start":{"row":8,"column":85},"end":{"row":8,"column":86},"action":"remove","lines":["7"],"id":9}],[{"start":{"row":8,"column":84},"end":{"row":8,"column":85},"action":"remove","lines":["8"],"id":10}],[{"start":{"row":8,"column":84},"end":{"row":8,"column":85},"action":"insert","lines":["9"],"id":11}],[{"start":{"row":8,"column":85},"end":{"row":8,"column":86},"action":"insert","lines":["5"],"id":12}],[{"start":{"row":8,"column":86},"end":{"row":8,"column":87},"action":"insert","lines":["5"],"id":13}],[{"start":{"row":18,"column":0},"end":{"row":18,"column":5},"action":"remove","lines":["years"],"id":14},{"start":{"row":18,"column":0},"end":{"row":18,"column":7},"action":"insert","lines":["seasons"]},{"start":{"row":30,"column":14},"end":{"row":30,"column":19},"action":"remove","lines":["years"]},{"start":{"row":30,"column":14},"end":{"row":30,"column":21},"action":"insert","lines":["seasons"]},{"start":{"row":31,"column":14},"end":{"row":31,"column":19},"action":"remove","lines":["years"]},{"start":{"row":31,"column":14},"end":{"row":31,"column":21},"action":"insert","lines":["seasons"]},{"start":{"row":32,"column":17},"end":{"row":32,"column":22},"action":"remove","lines":["years"]},{"start":{"row":32,"column":17},"end":{"row":32,"column":24},"action":"insert","lines":["seasons"]},{"start":{"row":41,"column":86},"end":{"row":41,"column":91},"action":"remove","lines":["years"]},{"start":{"row":41,"column":86},"end":{"row":41,"column":93},"action":"insert","lines":["seasons"]},{"start":{"row":58,"column":14},"end":{"row":58,"column":19},"action":"remove","lines":["years"]},{"start":{"row":58,"column":14},"end":{"row":58,"column":21},"action":"insert","lines":["seasons"]},{"start":{"row":125,"column":16},"end":{"row":125,"column":21},"action":"remove","lines":["years"]},{"start":{"row":125,"column":16},"end":{"row":125,"column":23},"action":"insert","lines":["seasons"]},{"start":{"row":197,"column":23},"end":{"row":197,"column":28},"action":"remove","lines":["years"]},{"start":{"row":197,"column":23},"end":{"row":197,"column":30},"action":"insert","lines":["seasons"]},{"start":{"row":198,"column":41},"end":{"row":198,"column":46},"action":"remove","lines":["years"]},{"start":{"row":198,"column":41},"end":{"row":198,"column":48},"action":"insert","lines":["seasons"]},{"start":{"row":199,"column":29},"end":{"row":199,"column":34},"action":"remove","lines":["years"]},{"start":{"row":199,"column":29},"end":{"row":199,"column":36},"action":"insert","lines":["seasons"]},{"start":{"row":205,"column":23},"end":{"row":205,"column":28},"action":"remove","lines":["years"]},{"start":{"row":205,"column":23},"end":{"row":205,"column":30},"action":"insert","lines":["seasons"]},{"start":{"row":206,"column":41},"end":{"row":206,"column":46},"action":"remove","lines":["years"]},{"start":{"row":206,"column":41},"end":{"row":206,"column":48},"action":"insert","lines":["seasons"]},{"start":{"row":207,"column":29},"end":{"row":207,"column":34},"action":"remove","lines":["years"]},{"start":{"row":207,"column":29},"end":{"row":207,"column":36},"action":"insert","lines":["seasons"]},{"start":{"row":213,"column":14},"end":{"row":213,"column":19},"action":"remove","lines":["years"]},{"start":{"row":213,"column":14},"end":{"row":213,"column":21},"action":"insert","lines":["seasons"]},{"start":{"row":213,"column":79},"end":{"row":213,"column":84},"action":"remove","lines":["years"]},{"start":{"row":213,"column":79},"end":{"row":213,"column":86},"action":"insert","lines":["seasons"]},{"start":{"row":228,"column":10},"end":{"row":228,"column":15},"action":"remove","lines":["years"]},{"start":{"row":228,"column":10},"end":{"row":228,"column":17},"action":"insert","lines":["seasons"]},{"start":{"row":228,"column":85},"end":{"row":228,"column":90},"action":"remove","lines":["years"]},{"start":{"row":228,"column":85},"end":{"row":228,"column":92},"action":"insert","lines":["seasons"]}],[{"start":{"row":25,"column":14},"end":{"row":25,"column":18},"action":"remove","lines":["year"],"id":15},{"start":{"row":25,"column":14},"end":{"row":25,"column":20},"action":"insert","lines":["season"]},{"start":{"row":30,"column":7},"end":{"row":30,"column":11},"action":"remove","lines":["year"]},{"start":{"row":30,"column":7},"end":{"row":30,"column":13},"action":"insert","lines":["season"]},{"start":{"row":31,"column":6},"end":{"row":31,"column":10},"action":"remove","lines":["year"]},{"start":{"row":31,"column":6},"end":{"row":31,"column":12},"action":"insert","lines":["season"]},{"start":{"row":32,"column":9},"end":{"row":32,"column":13},"action":"remove","lines":["year"]},{"start":{"row":32,"column":9},"end":{"row":32,"column":15},"action":"insert","lines":["season"]},{"start":{"row":33,"column":10},"end":{"row":33,"column":14},"action":"remove","lines":["year"]},{"start":{"row":33,"column":10},"end":{"row":33,"column":16},"action":"insert","lines":["season"]},{"start":{"row":33,"column":32},"end":{"row":33,"column":36},"action":"remove","lines":["year"]},{"start":{"row":33,"column":32},"end":{"row":33,"column":38},"action":"insert","lines":["season"]},{"start":{"row":33,"column":51},"end":{"row":33,"column":55},"action":"remove","lines":["year"]},{"start":{"row":33,"column":51},"end":{"row":33,"column":57},"action":"insert","lines":["season"]},{"start":{"row":35,"column":10},"end":{"row":35,"column":14},"action":"remove","lines":["year"]},{"start":{"row":35,"column":10},"end":{"row":35,"column":16},"action":"insert","lines":["season"]},{"start":{"row":40,"column":45},"end":{"row":40,"column":49},"action":"remove","lines":["year"]},{"start":{"row":40,"column":45},"end":{"row":40,"column":51},"action":"insert","lines":["season"]},{"start":{"row":41,"column":61},"end":{"row":41,"column":65},"action":"remove","lines":["year"]},{"start":{"row":41,"column":61},"end":{"row":41,"column":67},"action":"insert","lines":["season"]},{"start":{"row":46,"column":17},"end":{"row":46,"column":21},"action":"remove","lines":["year"]},{"start":{"row":46,"column":17},"end":{"row":46,"column":23},"action":"insert","lines":["season"]},{"start":{"row":46,"column":55},"end":{"row":46,"column":59},"action":"remove","lines":["year"]},{"start":{"row":46,"column":55},"end":{"row":46,"column":61},"action":"insert","lines":["season"]},{"start":{"row":47,"column":34},"end":{"row":47,"column":38},"action":"remove","lines":["year"]},{"start":{"row":47,"column":34},"end":{"row":47,"column":40},"action":"insert","lines":["season"]},{"start":{"row":50,"column":11},"end":{"row":50,"column":15},"action":"remove","lines":["year"]},{"start":{"row":50,"column":11},"end":{"row":50,"column":17},"action":"insert","lines":["season"]},{"start":{"row":50,"column":20},"end":{"row":50,"column":24},"action":"remove","lines":["year"]},{"start":{"row":50,"column":20},"end":{"row":50,"column":26},"action":"insert","lines":["season"]},{"start":{"row":52,"column":23},"end":{"row":52,"column":27},"action":"remove","lines":["year"]},{"start":{"row":52,"column":23},"end":{"row":52,"column":29},"action":"insert","lines":["season"]},{"start":{"row":52,"column":93},"end":{"row":52,"column":97},"action":"remove","lines":["year"]},{"start":{"row":52,"column":93},"end":{"row":52,"column":99},"action":"insert","lines":["season"]},{"start":{"row":52,"column":114},"end":{"row":52,"column":118},"action":"remove","lines":["year"]},{"start":{"row":52,"column":114},"end":{"row":52,"column":120},"action":"insert","lines":["season"]},{"start":{"row":55,"column":32},"end":{"row":55,"column":36},"action":"remove","lines":["year"]},{"start":{"row":55,"column":32},"end":{"row":55,"column":38},"action":"insert","lines":["season"]},{"start":{"row":58,"column":6},"end":{"row":58,"column":10},"action":"remove","lines":["year"]},{"start":{"row":58,"column":6},"end":{"row":58,"column":12},"action":"insert","lines":["season"]},{"start":{"row":59,"column":36},"end":{"row":59,"column":40},"action":"remove","lines":["year"]},{"start":{"row":59,"column":36},"end":{"row":59,"column":42},"action":"insert","lines":["season"]},{"start":{"row":60,"column":41},"end":{"row":60,"column":45},"action":"remove","lines":["year"]},{"start":{"row":60,"column":41},"end":{"row":60,"column":47},"action":"insert","lines":["season"]},{"start":{"row":60,"column":55},"end":{"row":60,"column":59},"action":"remove","lines":["year"]},{"start":{"row":60,"column":55},"end":{"row":60,"column":61},"action":"insert","lines":["season"]},{"start":{"row":125,"column":8},"end":{"row":125,"column":12},"action":"remove","lines":["year"]},{"start":{"row":125,"column":8},"end":{"row":125,"column":14},"action":"insert","lines":["season"]},{"start":{"row":126,"column":22},"end":{"row":126,"column":26},"action":"remove","lines":["year"]},{"start":{"row":126,"column":22},"end":{"row":126,"column":28},"action":"insert","lines":["season"]},{"start":{"row":127,"column":83},"end":{"row":127,"column":87},"action":"remove","lines":["year"]},{"start":{"row":127,"column":83},"end":{"row":127,"column":89},"action":"insert","lines":["season"]},{"start":{"row":127,"column":151},"end":{"row":127,"column":155},"action":"remove","lines":["year"]},{"start":{"row":127,"column":151},"end":{"row":127,"column":157},"action":"insert","lines":["season"]},{"start":{"row":128,"column":92},"end":{"row":128,"column":96},"action":"remove","lines":["year"]},{"start":{"row":128,"column":92},"end":{"row":128,"column":98},"action":"insert","lines":["season"]},{"start":{"row":128,"column":163},"end":{"row":128,"column":167},"action":"remove","lines":["year"]},{"start":{"row":128,"column":163},"end":{"row":128,"column":169},"action":"insert","lines":["season"]},{"start":{"row":129,"column":107},"end":{"row":129,"column":111},"action":"remove","lines":["year"]},{"start":{"row":129,"column":107},"end":{"row":129,"column":113},"action":"insert","lines":["season"]},{"start":{"row":129,"column":176},"end":{"row":129,"column":180},"action":"remove","lines":["year"]},{"start":{"row":129,"column":176},"end":{"row":129,"column":182},"action":"insert","lines":["season"]},{"start":{"row":130,"column":81},"end":{"row":130,"column":85},"action":"remove","lines":["year"]},{"start":{"row":130,"column":81},"end":{"row":130,"column":87},"action":"insert","lines":["season"]},{"start":{"row":130,"column":146},"end":{"row":130,"column":150},"action":"remove","lines":["year"]},{"start":{"row":130,"column":146},"end":{"row":130,"column":152},"action":"insert","lines":["season"]},{"start":{"row":131,"column":81},"end":{"row":131,"column":85},"action":"remove","lines":["year"]},{"start":{"row":131,"column":81},"end":{"row":131,"column":87},"action":"insert","lines":["season"]},{"start":{"row":131,"column":146},"end":{"row":131,"column":150},"action":"remove","lines":["year"]},{"start":{"row":131,"column":146},"end":{"row":131,"column":152},"action":"insert","lines":["season"]},{"start":{"row":132,"column":84},"end":{"row":132,"column":88},"action":"remove","lines":["year"]},{"start":{"row":132,"column":84},"end":{"row":132,"column":90},"action":"insert","lines":["season"]},{"start":{"row":132,"column":149},"end":{"row":132,"column":153},"action":"remove","lines":["year"]},{"start":{"row":132,"column":149},"end":{"row":132,"column":155},"action":"insert","lines":["season"]},{"start":{"row":135,"column":22},"end":{"row":135,"column":26},"action":"remove","lines":["year"]},{"start":{"row":135,"column":22},"end":{"row":135,"column":28},"action":"insert","lines":["season"]},{"start":{"row":136,"column":24},"end":{"row":136,"column":28},"action":"remove","lines":["year"]},{"start":{"row":136,"column":24},"end":{"row":136,"column":30},"action":"insert","lines":["season"]},{"start":{"row":136,"column":50},"end":{"row":136,"column":54},"action":"remove","lines":["year"]},{"start":{"row":136,"column":50},"end":{"row":136,"column":56},"action":"insert","lines":["season"]},{"start":{"row":139,"column":22},"end":{"row":139,"column":26},"action":"remove","lines":["year"]},{"start":{"row":139,"column":22},"end":{"row":139,"column":28},"action":"insert","lines":["season"]},{"start":{"row":140,"column":24},"end":{"row":140,"column":28},"action":"remove","lines":["year"]},{"start":{"row":140,"column":24},"end":{"row":140,"column":30},"action":"insert","lines":["season"]},{"start":{"row":146,"column":59},"end":{"row":146,"column":63},"action":"remove","lines":["year"]},{"start":{"row":146,"column":59},"end":{"row":146,"column":65},"action":"insert","lines":["season"]},{"start":{"row":153,"column":59},"end":{"row":153,"column":63},"action":"remove","lines":["year"]},{"start":{"row":153,"column":59},"end":{"row":153,"column":65},"action":"insert","lines":["season"]},{"start":{"row":159,"column":22},"end":{"row":159,"column":26},"action":"remove","lines":["year"]},{"start":{"row":159,"column":22},"end":{"row":159,"column":28},"action":"insert","lines":["season"]},{"start":{"row":162,"column":22},"end":{"row":162,"column":26},"action":"remove","lines":["year"]},{"start":{"row":162,"column":22},"end":{"row":162,"column":28},"action":"insert","lines":["season"]},{"start":{"row":164,"column":26},"end":{"row":164,"column":30},"action":"remove","lines":["year"]},{"start":{"row":164,"column":26},"end":{"row":164,"column":32},"action":"insert","lines":["season"]},{"start":{"row":168,"column":24},"end":{"row":168,"column":28},"action":"remove","lines":["year"]},{"start":{"row":168,"column":24},"end":{"row":168,"column":30},"action":"insert","lines":["season"]},{"start":{"row":169,"column":40},"end":{"row":169,"column":44},"action":"remove","lines":["year"]},{"start":{"row":169,"column":40},"end":{"row":169,"column":46},"action":"insert","lines":["season"]},{"start":{"row":171,"column":32},"end":{"row":171,"column":36},"action":"remove","lines":["year"]},{"start":{"row":171,"column":32},"end":{"row":171,"column":38},"action":"insert","lines":["season"]},{"start":{"row":173,"column":32},"end":{"row":173,"column":36},"action":"remove","lines":["year"]},{"start":{"row":173,"column":32},"end":{"row":173,"column":38},"action":"insert","lines":["season"]},{"start":{"row":175,"column":24},"end":{"row":175,"column":28},"action":"remove","lines":["year"]},{"start":{"row":175,"column":24},"end":{"row":175,"column":30},"action":"insert","lines":["season"]},{"start":{"row":178,"column":22},"end":{"row":178,"column":26},"action":"remove","lines":["year"]},{"start":{"row":178,"column":22},"end":{"row":178,"column":28},"action":"insert","lines":["season"]},{"start":{"row":181,"column":24},"end":{"row":181,"column":28},"action":"remove","lines":["year"]},{"start":{"row":181,"column":24},"end":{"row":181,"column":30},"action":"insert","lines":["season"]},{"start":{"row":184,"column":46},"end":{"row":184,"column":50},"action":"remove","lines":["year"]},{"start":{"row":184,"column":46},"end":{"row":184,"column":52},"action":"insert","lines":["season"]},{"start":{"row":185,"column":36},"end":{"row":185,"column":40},"action":"remove","lines":["year"]},{"start":{"row":185,"column":36},"end":{"row":185,"column":42},"action":"insert","lines":["season"]}],[{"start":{"row":10,"column":6},"end":{"row":10,"column":15},"action":"remove","lines":["countries"],"id":16},{"start":{"row":10,"column":6},"end":{"row":10,"column":11},"action":"insert","lines":["teams"]},{"start":{"row":11,"column":0},"end":{"row":11,"column":9},"action":"remove","lines":["countries"]},{"start":{"row":11,"column":0},"end":{"row":11,"column":5},"action":"insert","lines":["teams"]},{"start":{"row":12,"column":0},"end":{"row":12,"column":9},"action":"remove","lines":["countries"]},{"start":{"row":12,"column":0},"end":{"row":12,"column":5},"action":"insert","lines":["teams"]},{"start":{"row":20,"column":60},"end":{"row":20,"column":69},"action":"remove","lines":["countries"]},{"start":{"row":20,"column":60},"end":{"row":20,"column":65},"action":"insert","lines":["teams"]},{"start":{"row":39,"column":21},"end":{"row":39,"column":30},"action":"remove","lines":["countries"]},{"start":{"row":39,"column":21},"end":{"row":39,"column":26},"action":"insert","lines":["teams"]},{"start":{"row":71,"column":33},"end":{"row":71,"column":42},"action":"remove","lines":["countries"]},{"start":{"row":71,"column":33},"end":{"row":71,"column":38},"action":"insert","lines":["teams"]},{"start":{"row":195,"column":15},"end":{"row":195,"column":24},"action":"remove","lines":["countries"]},{"start":{"row":195,"column":15},"end":{"row":195,"column":20},"action":"insert","lines":["teams"]},{"start":{"row":203,"column":15},"end":{"row":203,"column":24},"action":"remove","lines":["countries"]},{"start":{"row":203,"column":15},"end":{"row":203,"column":20},"action":"insert","lines":["teams"]},{"start":{"row":211,"column":14},"end":{"row":211,"column":23},"action":"remove","lines":["countries"]},{"start":{"row":211,"column":14},"end":{"row":211,"column":19},"action":"insert","lines":["teams"]},{"start":{"row":211,"column":77},"end":{"row":211,"column":86},"action":"remove","lines":["countries"]},{"start":{"row":211,"column":77},"end":{"row":211,"column":82},"action":"insert","lines":["teams"]},{"start":{"row":218,"column":15},"end":{"row":218,"column":24},"action":"remove","lines":["countries"]},{"start":{"row":218,"column":15},"end":{"row":218,"column":20},"action":"insert","lines":["teams"]},{"start":{"row":221,"column":94},"end":{"row":221,"column":103},"action":"remove","lines":["countries"]},{"start":{"row":221,"column":94},"end":{"row":221,"column":99},"action":"insert","lines":["teams"]},{"start":{"row":227,"column":10},"end":{"row":227,"column":19},"action":"remove","lines":["countries"]},{"start":{"row":227,"column":10},"end":{"row":227,"column":15},"action":"insert","lines":["teams"]},{"start":{"row":227,"column":83},"end":{"row":227,"column":92},"action":"remove","lines":["countries"]},{"start":{"row":227,"column":83},"end":{"row":227,"column":88},"action":"insert","lines":["teams"]}],[{"start":{"row":20,"column":22},"end":{"row":20,"column":29},"action":"remove","lines":["country"],"id":17},{"start":{"row":20,"column":22},"end":{"row":20,"column":26},"action":"insert","lines":["team"]},{"start":{"row":39,"column":10},"end":{"row":39,"column":17},"action":"remove","lines":["country"]},{"start":{"row":39,"column":10},"end":{"row":39,"column":14},"action":"insert","lines":["team"]},{"start":{"row":40,"column":75},"end":{"row":40,"column":82},"action":"remove","lines":["country"]},{"start":{"row":40,"column":75},"end":{"row":40,"column":79},"action":"insert","lines":["team"]},{"start":{"row":40,"column":102},"end":{"row":40,"column":109},"action":"remove","lines":["country"]},{"start":{"row":40,"column":102},"end":{"row":40,"column":106},"action":"insert","lines":["team"]},{"start":{"row":70,"column":0},"end":{"row":70,"column":7},"action":"remove","lines":["country"]},{"start":{"row":70,"column":0},"end":{"row":70,"column":4},"action":"insert","lines":["team"]},{"start":{"row":71,"column":12},"end":{"row":71,"column":19},"action":"remove","lines":["country"]},{"start":{"row":71,"column":12},"end":{"row":71,"column":16},"action":"insert","lines":["team"]},{"start":{"row":73,"column":12},"end":{"row":73,"column":19},"action":"remove","lines":["country"]},{"start":{"row":73,"column":12},"end":{"row":73,"column":16},"action":"insert","lines":["team"]},{"start":{"row":74,"column":12},"end":{"row":74,"column":19},"action":"remove","lines":["country"]},{"start":{"row":74,"column":12},"end":{"row":74,"column":16},"action":"insert","lines":["team"]},{"start":{"row":75,"column":9},"end":{"row":75,"column":16},"action":"remove","lines":["country"]},{"start":{"row":75,"column":9},"end":{"row":75,"column":13},"action":"insert","lines":["team"]},{"start":{"row":77,"column":72},"end":{"row":77,"column":79},"action":"remove","lines":["country"]},{"start":{"row":77,"column":72},"end":{"row":77,"column":76},"action":"insert","lines":["team"]},{"start":{"row":77,"column":104},"end":{"row":77,"column":111},"action":"remove","lines":["country"]},{"start":{"row":77,"column":104},"end":{"row":77,"column":108},"action":"insert","lines":["team"]},{"start":{"row":78,"column":59},"end":{"row":78,"column":66},"action":"remove","lines":["country"]},{"start":{"row":78,"column":59},"end":{"row":78,"column":63},"action":"insert","lines":["team"]},{"start":{"row":78,"column":147},"end":{"row":78,"column":154},"action":"remove","lines":["country"]},{"start":{"row":78,"column":147},"end":{"row":78,"column":151},"action":"insert","lines":["team"]},{"start":{"row":79,"column":60},"end":{"row":79,"column":67},"action":"remove","lines":["country"]},{"start":{"row":79,"column":60},"end":{"row":79,"column":64},"action":"insert","lines":["team"]},{"start":{"row":79,"column":149},"end":{"row":79,"column":156},"action":"remove","lines":["country"]},{"start":{"row":79,"column":149},"end":{"row":79,"column":153},"action":"insert","lines":["team"]},{"start":{"row":80,"column":61},"end":{"row":80,"column":68},"action":"remove","lines":["country"]},{"start":{"row":80,"column":61},"end":{"row":80,"column":65},"action":"insert","lines":["team"]},{"start":{"row":80,"column":149},"end":{"row":80,"column":156},"action":"remove","lines":["country"]},{"start":{"row":80,"column":149},"end":{"row":80,"column":153},"action":"insert","lines":["team"]},{"start":{"row":82,"column":49},"end":{"row":82,"column":56},"action":"remove","lines":["country"]},{"start":{"row":82,"column":49},"end":{"row":82,"column":53},"action":"insert","lines":["team"]},{"start":{"row":84,"column":41},"end":{"row":84,"column":48},"action":"remove","lines":["country"]},{"start":{"row":84,"column":41},"end":{"row":84,"column":45},"action":"insert","lines":["team"]},{"start":{"row":84,"column":86},"end":{"row":84,"column":93},"action":"remove","lines":["country"]},{"start":{"row":84,"column":86},"end":{"row":84,"column":90},"action":"insert","lines":["team"]},{"start":{"row":86,"column":43},"end":{"row":86,"column":50},"action":"remove","lines":["country"]},{"start":{"row":86,"column":43},"end":{"row":86,"column":47},"action":"insert","lines":["team"]},{"start":{"row":86,"column":89},"end":{"row":86,"column":96},"action":"remove","lines":["country"]},{"start":{"row":86,"column":89},"end":{"row":86,"column":93},"action":"insert","lines":["team"]},{"start":{"row":91,"column":49},"end":{"row":91,"column":56},"action":"remove","lines":["country"]},{"start":{"row":91,"column":49},"end":{"row":91,"column":53},"action":"insert","lines":["team"]},{"start":{"row":93,"column":41},"end":{"row":93,"column":48},"action":"remove","lines":["country"]},{"start":{"row":93,"column":41},"end":{"row":93,"column":45},"action":"insert","lines":["team"]},{"start":{"row":93,"column":86},"end":{"row":93,"column":93},"action":"remove","lines":["country"]},{"start":{"row":93,"column":86},"end":{"row":93,"column":90},"action":"insert","lines":["team"]},{"start":{"row":95,"column":43},"end":{"row":95,"column":50},"action":"remove","lines":["country"]},{"start":{"row":95,"column":43},"end":{"row":95,"column":47},"action":"insert","lines":["team"]},{"start":{"row":95,"column":89},"end":{"row":95,"column":96},"action":"remove","lines":["country"]},{"start":{"row":95,"column":89},"end":{"row":95,"column":93},"action":"insert","lines":["team"]},{"start":{"row":100,"column":60},"end":{"row":100,"column":67},"action":"remove","lines":["country"]},{"start":{"row":100,"column":60},"end":{"row":100,"column":64},"action":"insert","lines":["team"]},{"start":{"row":100,"column":181},"end":{"row":100,"column":188},"action":"remove","lines":["country"]},{"start":{"row":100,"column":181},"end":{"row":100,"column":185},"action":"insert","lines":["team"]},{"start":{"row":103,"column":79},"end":{"row":103,"column":86},"action":"remove","lines":["country"]},{"start":{"row":103,"column":79},"end":{"row":103,"column":83},"action":"insert","lines":["team"]},{"start":{"row":103,"column":119},"end":{"row":103,"column":126},"action":"remove","lines":["country"]},{"start":{"row":103,"column":119},"end":{"row":103,"column":123},"action":"insert","lines":["team"]},{"start":{"row":103,"column":197},"end":{"row":103,"column":204},"action":"remove","lines":["country"]},{"start":{"row":103,"column":197},"end":{"row":103,"column":201},"action":"insert","lines":["team"]},{"start":{"row":103,"column":237},"end":{"row":103,"column":244},"action":"remove","lines":["country"]},{"start":{"row":103,"column":237},"end":{"row":103,"column":241},"action":"insert","lines":["team"]},{"start":{"row":105,"column":4},"end":{"row":105,"column":11},"action":"remove","lines":["country"]},{"start":{"row":105,"column":4},"end":{"row":105,"column":8},"action":"insert","lines":["team"]},{"start":{"row":105,"column":25},"end":{"row":105,"column":32},"action":"remove","lines":["country"]},{"start":{"row":105,"column":25},"end":{"row":105,"column":29},"action":"insert","lines":["team"]},{"start":{"row":105,"column":31},"end":{"row":105,"column":38},"action":"remove","lines":["country"]},{"start":{"row":105,"column":31},"end":{"row":105,"column":35},"action":"insert","lines":["team"]},{"start":{"row":107,"column":82},"end":{"row":107,"column":89},"action":"remove","lines":["country"]},{"start":{"row":107,"column":82},"end":{"row":107,"column":86},"action":"insert","lines":["team"]},{"start":{"row":107,"column":125},"end":{"row":107,"column":132},"action":"remove","lines":["country"]},{"start":{"row":107,"column":125},"end":{"row":107,"column":129},"action":"insert","lines":["team"]},{"start":{"row":107,"column":186},"end":{"row":107,"column":193},"action":"remove","lines":["country"]},{"start":{"row":107,"column":186},"end":{"row":107,"column":190},"action":"insert","lines":["team"]},{"start":{"row":107,"column":229},"end":{"row":107,"column":236},"action":"remove","lines":["country"]},{"start":{"row":107,"column":229},"end":{"row":107,"column":233},"action":"insert","lines":["team"]},{"start":{"row":108,"column":82},"end":{"row":108,"column":89},"action":"remove","lines":["country"]},{"start":{"row":108,"column":82},"end":{"row":108,"column":86},"action":"insert","lines":["team"]},{"start":{"row":108,"column":125},"end":{"row":108,"column":132},"action":"remove","lines":["country"]},{"start":{"row":108,"column":125},"end":{"row":108,"column":129},"action":"insert","lines":["team"]},{"start":{"row":109,"column":82},"end":{"row":109,"column":89},"action":"remove","lines":["country"]},{"start":{"row":109,"column":82},"end":{"row":109,"column":86},"action":"insert","lines":["team"]},{"start":{"row":109,"column":125},"end":{"row":109,"column":132},"action":"remove","lines":["country"]},{"start":{"row":109,"column":125},"end":{"row":109,"column":129},"action":"insert","lines":["team"]},{"start":{"row":110,"column":82},"end":{"row":110,"column":89},"action":"remove","lines":["country"]},{"start":{"row":110,"column":82},"end":{"row":110,"column":86},"action":"insert","lines":["team"]},{"start":{"row":110,"column":114},"end":{"row":110,"column":121},"action":"remove","lines":["country"]},{"start":{"row":110,"column":114},"end":{"row":110,"column":118},"action":"insert","lines":["team"]},{"start":{"row":115,"column":94},"end":{"row":115,"column":101},"action":"remove","lines":["country"]},{"start":{"row":115,"column":94},"end":{"row":115,"column":98},"action":"insert","lines":["team"]},{"start":{"row":115,"column":134},"end":{"row":115,"column":141},"action":"remove","lines":["country"]},{"start":{"row":115,"column":134},"end":{"row":115,"column":138},"action":"insert","lines":["team"]},{"start":{"row":116,"column":95},"end":{"row":116,"column":102},"action":"remove","lines":["country"]},{"start":{"row":116,"column":95},"end":{"row":116,"column":99},"action":"insert","lines":["team"]},{"start":{"row":116,"column":135},"end":{"row":116,"column":142},"action":"remove","lines":["country"]},{"start":{"row":116,"column":135},"end":{"row":116,"column":139},"action":"insert","lines":["team"]},{"start":{"row":120,"column":11},"end":{"row":120,"column":18},"action":"remove","lines":["country"]},{"start":{"row":120,"column":11},"end":{"row":120,"column":15},"action":"insert","lines":["team"]},{"start":{"row":120,"column":43},"end":{"row":120,"column":50},"action":"remove","lines":["country"]},{"start":{"row":120,"column":43},"end":{"row":120,"column":47},"action":"insert","lines":["team"]},{"start":{"row":120,"column":56},"end":{"row":120,"column":63},"action":"remove","lines":["country"]},{"start":{"row":120,"column":56},"end":{"row":120,"column":60},"action":"insert","lines":["team"]},{"start":{"row":121,"column":9},"end":{"row":121,"column":16},"action":"remove","lines":["country"]},{"start":{"row":121,"column":9},"end":{"row":121,"column":13},"action":"insert","lines":["team"]},{"start":{"row":121,"column":79},"end":{"row":121,"column":86},"action":"remove","lines":["country"]},{"start":{"row":121,"column":79},"end":{"row":121,"column":83},"action":"insert","lines":["team"]},{"start":{"row":121,"column":122},"end":{"row":121,"column":129},"action":"remove","lines":["country"]},{"start":{"row":121,"column":122},"end":{"row":121,"column":126},"action":"insert","lines":["team"]},{"start":{"row":121,"column":183},"end":{"row":121,"column":190},"action":"remove","lines":["country"]},{"start":{"row":121,"column":183},"end":{"row":121,"column":187},"action":"insert","lines":["team"]},{"start":{"row":121,"column":226},"end":{"row":121,"column":233},"action":"remove","lines":["country"]},{"start":{"row":121,"column":226},"end":{"row":121,"column":230},"action":"insert","lines":["team"]},{"start":{"row":122,"column":9},"end":{"row":122,"column":16},"action":"remove","lines":["country"]},{"start":{"row":122,"column":9},"end":{"row":122,"column":13},"action":"insert","lines":["team"]},{"start":{"row":122,"column":76},"end":{"row":122,"column":83},"action":"remove","lines":["country"]},{"start":{"row":122,"column":76},"end":{"row":122,"column":80},"action":"insert","lines":["team"]},{"start":{"row":122,"column":119},"end":{"row":122,"column":126},"action":"remove","lines":["country"]},{"start":{"row":122,"column":119},"end":{"row":122,"column":123},"action":"insert","lines":["team"]},{"start":{"row":123,"column":9},"end":{"row":123,"column":16},"action":"remove","lines":["country"]},{"start":{"row":123,"column":9},"end":{"row":123,"column":13},"action":"insert","lines":["team"]},{"start":{"row":123,"column":76},"end":{"row":123,"column":83},"action":"remove","lines":["country"]},{"start":{"row":123,"column":76},"end":{"row":123,"column":80},"action":"insert","lines":["team"]},{"start":{"row":123,"column":119},"end":{"row":123,"column":126},"action":"remove","lines":["country"]},{"start":{"row":123,"column":119},"end":{"row":123,"column":123},"action":"insert","lines":["team"]},{"start":{"row":126,"column":13},"end":{"row":126,"column":20},"action":"remove","lines":["country"]},{"start":{"row":126,"column":13},"end":{"row":126,"column":17},"action":"insert","lines":["team"]},{"start":{"row":127,"column":60},"end":{"row":127,"column":67},"action":"remove","lines":["country"]},{"start":{"row":127,"column":60},"end":{"row":127,"column":64},"action":"insert","lines":["team"]},{"start":{"row":127,"column":125},"end":{"row":127,"column":132},"action":"remove","lines":["country"]},{"start":{"row":127,"column":125},"end":{"row":127,"column":129},"action":"insert","lines":["team"]},{"start":{"row":128,"column":69},"end":{"row":128,"column":76},"action":"remove","lines":["country"]},{"start":{"row":128,"column":69},"end":{"row":128,"column":73},"action":"insert","lines":["team"]},{"start":{"row":128,"column":137},"end":{"row":128,"column":144},"action":"remove","lines":["country"]},{"start":{"row":128,"column":137},"end":{"row":128,"column":141},"action":"insert","lines":["team"]},{"start":{"row":129,"column":41},"end":{"row":129,"column":48},"action":"remove","lines":["country"]},{"start":{"row":129,"column":41},"end":{"row":129,"column":45},"action":"insert","lines":["team"]},{"start":{"row":129,"column":81},"end":{"row":129,"column":88},"action":"remove","lines":["country"]},{"start":{"row":129,"column":81},"end":{"row":129,"column":85},"action":"insert","lines":["team"]},{"start":{"row":129,"column":147},"end":{"row":129,"column":154},"action":"remove","lines":["country"]},{"start":{"row":129,"column":147},"end":{"row":129,"column":151},"action":"insert","lines":["team"]},{"start":{"row":129,"column":198},"end":{"row":129,"column":205},"action":"remove","lines":["country"]},{"start":{"row":129,"column":198},"end":{"row":129,"column":202},"action":"insert","lines":["team"]},{"start":{"row":130,"column":58},"end":{"row":130,"column":65},"action":"remove","lines":["country"]},{"start":{"row":130,"column":58},"end":{"row":130,"column":62},"action":"insert","lines":["team"]},{"start":{"row":130,"column":120},"end":{"row":130,"column":127},"action":"remove","lines":["country"]},{"start":{"row":130,"column":120},"end":{"row":130,"column":124},"action":"insert","lines":["team"]},{"start":{"row":131,"column":58},"end":{"row":131,"column":65},"action":"remove","lines":["country"]},{"start":{"row":131,"column":58},"end":{"row":131,"column":62},"action":"insert","lines":["team"]},{"start":{"row":131,"column":120},"end":{"row":131,"column":127},"action":"remove","lines":["country"]},{"start":{"row":131,"column":120},"end":{"row":131,"column":124},"action":"insert","lines":["team"]},{"start":{"row":132,"column":61},"end":{"row":132,"column":68},"action":"remove","lines":["country"]},{"start":{"row":132,"column":61},"end":{"row":132,"column":65},"action":"insert","lines":["team"]},{"start":{"row":132,"column":123},"end":{"row":132,"column":130},"action":"remove","lines":["country"]},{"start":{"row":132,"column":123},"end":{"row":132,"column":127},"action":"insert","lines":["team"]},{"start":{"row":135,"column":13},"end":{"row":135,"column":20},"action":"remove","lines":["country"]},{"start":{"row":135,"column":13},"end":{"row":135,"column":17},"action":"insert","lines":["team"]},{"start":{"row":136,"column":15},"end":{"row":136,"column":22},"action":"remove","lines":["country"]},{"start":{"row":136,"column":15},"end":{"row":136,"column":19},"action":"insert","lines":["team"]},{"start":{"row":139,"column":13},"end":{"row":139,"column":20},"action":"remove","lines":["country"]},{"start":{"row":139,"column":13},"end":{"row":139,"column":17},"action":"insert","lines":["team"]},{"start":{"row":140,"column":15},"end":{"row":140,"column":22},"action":"remove","lines":["country"]},{"start":{"row":140,"column":15},"end":{"row":140,"column":19},"action":"insert","lines":["team"]},{"start":{"row":146,"column":20},"end":{"row":146,"column":27},"action":"remove","lines":["country"]},{"start":{"row":146,"column":20},"end":{"row":146,"column":24},"action":"insert","lines":["team"]},{"start":{"row":146,"column":47},"end":{"row":146,"column":54},"action":"remove","lines":["country"]},{"start":{"row":146,"column":47},"end":{"row":146,"column":51},"action":"insert","lines":["team"]},{"start":{"row":149,"column":20},"end":{"row":149,"column":27},"action":"remove","lines":["country"]},{"start":{"row":149,"column":20},"end":{"row":149,"column":24},"action":"insert","lines":["team"]},{"start":{"row":153,"column":20},"end":{"row":153,"column":27},"action":"remove","lines":["country"]},{"start":{"row":153,"column":20},"end":{"row":153,"column":24},"action":"insert","lines":["team"]},{"start":{"row":153,"column":47},"end":{"row":153,"column":54},"action":"remove","lines":["country"]},{"start":{"row":153,"column":47},"end":{"row":153,"column":51},"action":"insert","lines":["team"]},{"start":{"row":156,"column":20},"end":{"row":156,"column":27},"action":"remove","lines":["country"]},{"start":{"row":156,"column":20},"end":{"row":156,"column":24},"action":"insert","lines":["team"]},{"start":{"row":159,"column":13},"end":{"row":159,"column":20},"action":"remove","lines":["country"]},{"start":{"row":159,"column":13},"end":{"row":159,"column":17},"action":"insert","lines":["team"]},{"start":{"row":162,"column":13},"end":{"row":162,"column":20},"action":"remove","lines":["country"]},{"start":{"row":162,"column":13},"end":{"row":162,"column":17},"action":"insert","lines":["team"]},{"start":{"row":164,"column":17},"end":{"row":164,"column":24},"action":"remove","lines":["country"]},{"start":{"row":164,"column":17},"end":{"row":164,"column":21},"action":"insert","lines":["team"]},{"start":{"row":168,"column":15},"end":{"row":168,"column":22},"action":"remove","lines":["country"]},{"start":{"row":168,"column":15},"end":{"row":168,"column":19},"action":"insert","lines":["team"]},{"start":{"row":171,"column":23},"end":{"row":171,"column":30},"action":"remove","lines":["country"]},{"start":{"row":171,"column":23},"end":{"row":171,"column":27},"action":"insert","lines":["team"]},{"start":{"row":173,"column":23},"end":{"row":173,"column":30},"action":"remove","lines":["country"]},{"start":{"row":173,"column":23},"end":{"row":173,"column":27},"action":"insert","lines":["team"]},{"start":{"row":175,"column":15},"end":{"row":175,"column":22},"action":"remove","lines":["country"]},{"start":{"row":175,"column":15},"end":{"row":175,"column":19},"action":"insert","lines":["team"]},{"start":{"row":178,"column":13},"end":{"row":178,"column":20},"action":"remove","lines":["country"]},{"start":{"row":178,"column":13},"end":{"row":178,"column":17},"action":"insert","lines":["team"]},{"start":{"row":181,"column":15},"end":{"row":181,"column":22},"action":"remove","lines":["country"]},{"start":{"row":181,"column":15},"end":{"row":181,"column":19},"action":"insert","lines":["team"]},{"start":{"row":182,"column":17},"end":{"row":182,"column":24},"action":"remove","lines":["country"]},{"start":{"row":182,"column":17},"end":{"row":182,"column":21},"action":"insert","lines":["team"]},{"start":{"row":182,"column":30},"end":{"row":182,"column":37},"action":"remove","lines":["country"]},{"start":{"row":182,"column":30},"end":{"row":182,"column":34},"action":"insert","lines":["team"]},{"start":{"row":183,"column":43},"end":{"row":183,"column":50},"action":"remove","lines":["country"]},{"start":{"row":183,"column":43},"end":{"row":183,"column":47},"action":"insert","lines":["team"]},{"start":{"row":183,"column":56},"end":{"row":183,"column":63},"action":"remove","lines":["country"]},{"start":{"row":183,"column":56},"end":{"row":183,"column":60},"action":"insert","lines":["team"]},{"start":{"row":185,"column":27},"end":{"row":185,"column":34},"action":"remove","lines":["country"]},{"start":{"row":185,"column":27},"end":{"row":185,"column":31},"action":"insert","lines":["team"]},{"start":{"row":188,"column":12},"end":{"row":188,"column":19},"action":"remove","lines":["country"]},{"start":{"row":188,"column":12},"end":{"row":188,"column":16},"action":"insert","lines":["team"]},{"start":{"row":188,"column":32},"end":{"row":188,"column":39},"action":"remove","lines":["country"]},{"start":{"row":188,"column":32},"end":{"row":188,"column":36},"action":"insert","lines":["team"]},{"start":{"row":189,"column":12},"end":{"row":189,"column":19},"action":"remove","lines":["country"]},{"start":{"row":189,"column":12},"end":{"row":189,"column":16},"action":"insert","lines":["team"]},{"start":{"row":189,"column":56},"end":{"row":189,"column":63},"action":"remove","lines":["country"]},{"start":{"row":189,"column":56},"end":{"row":189,"column":60},"action":"insert","lines":["team"]},{"start":{"row":192,"column":21},"end":{"row":192,"column":28},"action":"remove","lines":["country"]},{"start":{"row":192,"column":21},"end":{"row":192,"column":25},"action":"insert","lines":["team"]},{"start":{"row":195,"column":4},"end":{"row":195,"column":11},"action":"remove","lines":["country"]},{"start":{"row":195,"column":4},"end":{"row":195,"column":8},"action":"insert","lines":["team"]},{"start":{"row":196,"column":17},"end":{"row":196,"column":24},"action":"remove","lines":["country"]},{"start":{"row":196,"column":17},"end":{"row":196,"column":21},"action":"insert","lines":["team"]},{"start":{"row":198,"column":32},"end":{"row":198,"column":39},"action":"remove","lines":["country"]},{"start":{"row":198,"column":32},"end":{"row":198,"column":36},"action":"insert","lines":["team"]},{"start":{"row":199,"column":20},"end":{"row":199,"column":27},"action":"remove","lines":["country"]},{"start":{"row":199,"column":20},"end":{"row":199,"column":24},"action":"insert","lines":["team"]},{"start":{"row":199,"column":55},"end":{"row":199,"column":62},"action":"remove","lines":["country"]},{"start":{"row":199,"column":55},"end":{"row":199,"column":59},"action":"insert","lines":["team"]},{"start":{"row":200,"column":29},"end":{"row":200,"column":36},"action":"remove","lines":["country"]},{"start":{"row":200,"column":29},"end":{"row":200,"column":33},"action":"insert","lines":["team"]},{"start":{"row":203,"column":4},"end":{"row":203,"column":11},"action":"remove","lines":["country"]},{"start":{"row":203,"column":4},"end":{"row":203,"column":8},"action":"insert","lines":["team"]},{"start":{"row":204,"column":17},"end":{"row":204,"column":24},"action":"remove","lines":["country"]},{"start":{"row":204,"column":17},"end":{"row":204,"column":21},"action":"insert","lines":["team"]},{"start":{"row":206,"column":32},"end":{"row":206,"column":39},"action":"remove","lines":["country"]},{"start":{"row":206,"column":32},"end":{"row":206,"column":36},"action":"insert","lines":["team"]},{"start":{"row":207,"column":20},"end":{"row":207,"column":27},"action":"remove","lines":["country"]},{"start":{"row":207,"column":20},"end":{"row":207,"column":24},"action":"insert","lines":["team"]},{"start":{"row":207,"column":55},"end":{"row":207,"column":62},"action":"remove","lines":["country"]},{"start":{"row":207,"column":55},"end":{"row":207,"column":59},"action":"insert","lines":["team"]},{"start":{"row":208,"column":29},"end":{"row":208,"column":36},"action":"remove","lines":["country"]},{"start":{"row":208,"column":29},"end":{"row":208,"column":33},"action":"insert","lines":["team"]},{"start":{"row":216,"column":6},"end":{"row":216,"column":13},"action":"remove","lines":["country"]},{"start":{"row":216,"column":6},"end":{"row":216,"column":10},"action":"insert","lines":["team"]},{"start":{"row":218,"column":4},"end":{"row":218,"column":11},"action":"remove","lines":["country"]},{"start":{"row":218,"column":4},"end":{"row":218,"column":8},"action":"insert","lines":["team"]},{"start":{"row":219,"column":9},"end":{"row":219,"column":16},"action":"remove","lines":["country"]},{"start":{"row":219,"column":9},"end":{"row":219,"column":13},"action":"insert","lines":["team"]},{"start":{"row":220,"column":9},"end":{"row":220,"column":16},"action":"remove","lines":["country"]},{"start":{"row":220,"column":9},"end":{"row":220,"column":13},"action":"insert","lines":["team"]},{"start":{"row":220,"column":14},"end":{"row":220,"column":21},"action":"remove","lines":["country"]},{"start":{"row":220,"column":14},"end":{"row":220,"column":18},"action":"insert","lines":["team"]},{"start":{"row":220,"column":27},"end":{"row":220,"column":34},"action":"remove","lines":["country"]},{"start":{"row":220,"column":27},"end":{"row":220,"column":31},"action":"insert","lines":["team"]},{"start":{"row":221,"column":19},"end":{"row":221,"column":26},"action":"remove","lines":["country"]},{"start":{"row":221,"column":19},"end":{"row":221,"column":23},"action":"insert","lines":["team"]},{"start":{"row":221,"column":101},"end":{"row":221,"column":108},"action":"remove","lines":["country"]},{"start":{"row":221,"column":101},"end":{"row":221,"column":105},"action":"insert","lines":["team"]},{"start":{"row":225,"column":10},"end":{"row":225,"column":17},"action":"remove","lines":["country"]},{"start":{"row":225,"column":10},"end":{"row":225,"column":14},"action":"insert","lines":["team"]},{"start":{"row":225,"column":88},"end":{"row":225,"column":95},"action":"remove","lines":["country"]},{"start":{"row":225,"column":88},"end":{"row":225,"column":92},"action":"insert","lines":["team"]}]]},"ace":{"folds":[],"scrolltop":3660,"scrollleft":0,"selection":{"start":{"row":35,"column":29},"end":{"row":35,"column":29},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":214,"state":"start","mode":"ace/mode/python"}},"timestamp":1436158639801,"hash":"9c1473727d8c90e13c2a3c0efc182c08f1dcf724"}